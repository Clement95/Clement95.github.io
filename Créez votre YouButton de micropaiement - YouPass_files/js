
/**
*	Cette fonction fait spawn une bulle sur la div ciblée contenant le 
*	texte ciblé, avec la couleur ciblée
*	@var string div L'endroit sur lequel on veut faire pointer la bulle
*	@var string txt Texte à afficher
*	@var string color Couleur de la bulle (default : #333333, gris foncé)
*	@var string txt_color Couleur du texte (default : white)
*	@var string div2 La zone d'action du mouseover mouseout
*
*	EXEMPLE :
*	<span id="cost">Mon coût en €</span>		//	Div ou span qui déclenchera la bulle au passage de la souris
*	<script type="text/javascript">			
*		$(document).ready(function(){
*			createBubble(						
*				"cost",												//	id dom du div ciblé
*				"Ce montant sera débité sur votre solde RVF",		//	Message de la bulle
*				"#333333",											//	background de la bulle
*				"white"									//	couleur du texte de la bulle
*			);
*		});
*	</script>
*/

/*	To lock / unlock the over*/
var bubble_lock = new Array();
var is_on = new Array();

var createBubble = function(div, txt, color, txt_color, provenance, action_zone){
	is_on[div] = true;
	bubble_lock[div] = false;
	
	
	var id_bubble = 'bubble-'+div;
	var bubble = '<div class="bubble" id="'+id_bubble+'" style="display:none;">'+txt+'<div class="bubble-point"><img src="https://static.youpass.com/frontend/images/cms/bubble-point.png" alt=""/></div></div>';
	$('#'+div).prepend(bubble);
	var height = $('#'+id_bubble).height() + 10;
	var width = Math.round($('#'+id_bubble).width() / 3);
	
	if(provenance == "operation"){
		var height = 45;
		var width = 25;
	}
	else{
		var height = $('#'+id_bubble).height() + 10;
		var width = Math.round($('#'+id_bubble).width() / 3);
	}
	
	
	$('#'+id_bubble).css('color',  txt_color);
	$('#'+id_bubble).css('background', color);
	$('#'+id_bubble+' .bubble-point').css('color', color);
	$('#'+id_bubble).css("margin-top", '-'+height+'px');
	$('#'+id_bubble).css("margin-left", width+'px');
	
	$('#'+action_zone).mouseenter(function(){
		is_on[div] = true;
		if(!bubble_lock[div] && is_on[div]){
			bubble_lock[div] = true;
			$('#'+id_bubble).fadeIn(200, "swing", function(){
				bubble_lock[div]	= false;
				if(!is_on[div]){
					bubble_lock[div] = true;
					$('#'+id_bubble).fadeOut(200, "swing", function(){
						bubble_lock[div]	= false;
					});
				}
			});
		}
	});
	
	$('#'+action_zone).mouseleave(function(){
		is_on[div] = false;
		if(!bubble_lock[div] && !is_on[div]){
			bubble_lock[div] = true;
			$('#'+id_bubble).fadeOut(200, "swing", function(){
				bubble_lock[div]	= false;
				if(is_on[div]){
					bubble_lock[div] = true;
					$('#'+id_bubble).fadeIn(200, "swing", function(){
						bubble_lock[div]	= false;
					});
				}
			});
		}
	});
};




/**
*	Permet de formater un nombre de manière à ce qu'il ait le format voulu
*	Ajoutée le 23/01/2014 à 16h22
*	@param float number Nombre à formater
*	@param int ent Le nombre de caractères pour la partie entière
*	@param int dec Le nombre de caractères pour la partie décimale
*	@param boolean touch_ent A savoir si on modifie la partie entière ou pas
*	@return string Le nombre formaté comme voulu
*/
function number_format(number,ent,dec,touch_ent){
	var splitted = String(number).split('.');
	var i=0;
	var begin = splitted[0];
	var end = splitted[1];
	if(touch_ent){
		if(splitted[0].length > ent){
			begin = splitted[0].substring(ent-1);
		}
		else if(splitted[0].length < ent){
			var diff = ent - splitted[0].length;
			for(i=0;i<diff;i++){
				splitted[0] = "0"+splitted[0];
			}
			begin = splitted[0];
		}
	}
	if(dec == 0){
		return begin
	}
	else{
		if(splitted.length == 1){
			splitted[1] = "";
			for(i=0;i<dec;i++){
				splitted[1] = splitted[1]+"0";
			}
			end = splitted[1];
		}
		else{
			if(splitted[1].length > dec){
				
				end = splitted[1].substring(0,dec-1);
			}
			else if(splitted[1].length < dec){
				diff = dec - splitted[1].length;
				var end = splitted[1];
				for(i=0;i<diff;i++){
					end += "0";
				}
			}
		}
		return begin+"."+end;
	}
	
	  
}


/**
*	Permet de déteriner si une chaine est un entier
*	Ajoutée le 29/01/2014 à 12h02
*	@param string number La chaîne à vérifier
*	@return boolean Suivant si c'est un entier ou pas
*/
function is_int(num){
	var exp = new RegExp("^[0-9]+$","g");
	return exp.test(num);
}

/**
*	Permet d'ajouter le drapeau à un préfixe téléphonquie sur un select
*	Ajoutée le 20/05/2014 à 12h02
*	Robin Yann
*/
function changeImg(){
	var ImgArray = new Array();
	
					ImgArray[1] =  "fr.png";
					ImgArray[3] =  "be.png";
					ImgArray[4] =  "dm.png";
					ImgArray[5] =  "dm.png";
					ImgArray[6] =  "dm.png";
					ImgArray[7] =  "dm.png";
					ImgArray[8] =  "dm.png";
					ImgArray[9] =  "dm.png";
					ImgArray[10] =  "dm.png";
					ImgArray[11] =  "dm.png";
					ImgArray[12] =  "dm.png";
		
	




	$(".flag").css('background-image','url(https://static.youpass.com/frontend/images/flags/'+ImgArray[$("#prefixes").val()]+')').css("background-repeat","no-repeat").css("background-position","10% 45%");
}

var parentFancyboxUpdate = function(){
		parent.$.fancybox.update();
	};

/**
*	Permet de modifier les virgules en point pour que le tout reste fonctionnel
*	Ajoutée le 11/06/2014 à 12h02
*	@author <hmouille>
*	@param string div Identifiant de la div visée
*	Appelée dans la fonction suivante => pour tous les elements de type input de classe commatable
*/
function patchComma(div){
	var txt = $("#"+div).val();
	var ntxt = txt.replace(',', '.');
	$('#'+div).val(ntxt);
}



$(document).ready(function(){
	$('.commatable').keyup(function(){
		var yop = this.id;
        
		setTimeout("patchComma('"+yop+"');", 500);
	});

});


    function isFloat(number){
        if(number[0] == '.' || number[0] == ','){
            number = '0'+number;
        }
        var reg = /^[0-9]+([,\.]{1}[0-9]*)*$/
        return reg.exec(number);
    }

    function format_number(number, dec){
        var mult = Math.pow(10, dec);
        return Math.ceil(parseFloat(number) * mult) / mult;
    }


    /**
    *   Displays the ratings (stars)
    */
    function displayStars(id, note){

        var empty = '<i class="icon icon-star-o"></i>';
        var half = '<i class="icon icon-star-half-empty"></i>';
        var full = '<i class="icon icon-star"></i>';

        var fl = Math.floor(note);
        var dec = note - fl;
        var html = "";
        var nb_star = 0;

        for(i=1; i<=fl; i++){
            html += full;
            nb_star++;
        }

        if(nb_star < 5){
            nb_star++;
            if(dec < 0.25)
                html += empty;
            if(dec >= 0.25 && dec < 0.75)
                html += half;
            if(dec >= 0.75)
                html += full;
        }

        if(nb_star < 5){
            for(i=0;i<=4-nb_star;i++){
                html += empty;
            }
        }

        if(id.substr(0, 7) == "to-note"){
            idNote = (id.substr(7) == "" ? null : id.substr(7));
            $('#'+id).html(html);
            $('#'+id+' i').each(function(key, value){
                nkey = key+1;
                $(value).attr('onClick', "displayStars('"+id+"', "+nkey+");");
                $(value).attr('onmouseup', "validStar("+idNote+", "+nkey+");");
            });
        }
        else{
            if(id.charAt(0) == '.'){
                $(id).html();
            }
            else{
                $('.'+id).html(html);
            }
        }
    }

    /****************************************************************************************************************************************************************

    var displayStars = function(id, note){
            var full = '<i class="icon icon-star"></i>';
            var empty = '<i class="icon icon-star-o"></i>';
            var half = '<i class="icon icon-star-half-empty"></i>';

            var fl = Math.floor(note);
            var dec = note - fl;
            var html = "";
            var nb_star = 0;

            for(i=1;i<=fl;i++){
                html += full;
                nb_star++;
            }

            if(nb_star < 5){
                nb_star++;
                if(dec < 0.25)
                    html += empty;
                if(dec >= 0.25 && dec < 0.75)
                    html += half;
                    if(dec >= 0.75)
                html += full;
            }

            if(nb_star < 5){
                for(i=0;i<=4-nb_star;i++){
                    html += empty;
                }
            }

            $('#note-'+id).append(html);

        };

    **************************************************************************************************** ======> TO DELETE ONCE EVERY THING WORKS WITH THE ABOVE ONE */

    //  color : red, yellow, green, cyan, blue
    function genError(color, place, text){
        var err_col_cor = new Array();
        err_col_cor['red'] = 'danger';
        err_col_cor['yellow'] = 'warning';
        err_col_cor['green'] = 'success';
        err_col_cor['cyan'] = 'info';
        err_col_cor['blue'] = 'primary';

        $('#'+place).append('<p class="bg-'+err_col_cor[color]+'">'+text+'</p>');
    }
    //  color : red, yellow, green
    function inputError(color, place, text){
        var err_col_inp = new Array();
        err_col_inp['red'] = 'has-error';
        err_col_inp['yellow'] = 'has-warning';
        err_col_inp['green'] = 'has-success';
        var imp = $('#'+place);
        $.each(err_col_inp, function(key, value){
            imp.parent().removeClass(value);
        });
        imp.parent().addClass(err_col_inp[color]);
        if(imp.next().hasClass('help-block')){
            imp.next().remove();
        }
        if(text != null){
            imp.after('<span class="help-block">'+text+'</span>');
        }
    }

    function resetForm(id){
        $('#'+id+' input:text').each(function(yiip, yoop){
            inputError('green', $(yoop).attr('id'), null);
        });
        $('#'+id+' textarea').each(function(yiip, yoop){
            inputError('green', $(yoop).attr('id'), null);
        });
    }




    function redirectLogin(data){
        if(typeof(data.auth) !== 'undefined' && data.auth == true){
            window.location.href = '/fr/connectez-vous';
            return;
        }
    }

    function redirectLoginUrl(data, url){
        if(typeof(data.auth) !== 'undefined' && data.auth == true){
            window.location.href = '/fr/connectez-vous?from='+url;
            return;
        }
    }

    function redirectLoginUrlError(data, url,error){
        if(typeof(data.auth) !== 'undefined' && data.auth == true){
            redirectAfterLogin(url,error)
        }
    }


    function redirectAfterLogin(url, error){
        if(error != null){
            var form = $('<form action="/fr/connectez-vous" method="post">' +
                    '<input type="text" name="from" value="' + url + '" />' +
                    '<input type="text" name="error" value="' + error + '" />' +
                    '</form>');
            $('body').append(form);
            form.submit();
        }
        else{
            var form = $('<form action="/fr/connectez-vous" method="post">' +
                    '<input type="text" name="from" value="' + url + '" />' +
                    '</form>');
            $('body').append(form);
            form.submit();
        }
    }








